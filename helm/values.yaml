global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: pullSecretName
  flavor: openshift

rasterCommon:
  serviceUrls:
    jobManager: "http://job-manager-raster-dev-discrete-ingestion-db"
    heartbeatManager: "http://heartbeat-manager-raster-dev-heartbeat-manager"
    downloadServer: "http://file-download-server-dev-file-download-server"
  jobManagement:
    exporter:
      jobType: tilesExport
      taskType: tilesExport
  storage:
    fs:
      gpkgsPvc:
        enabled: true
        name: gpkgs-storage
        subPath: gpkgs
      internalPvc:
        enabled: true
        name: internal-pvc
        subPath: tiles
  storageProvider: FS

intermediateStorage:
  enabled: true
  sizeLimit: '10Gi'

image:
  repository: tiles-imploder
  tag: v1.2.0

env:
  port: 8080
  targetPort: 8080
  protocol: TCP
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  tilesDirectoryPath: "/tilesStorage"
  queue: 
    dequeueIntervalMs: 1000
    heartbeatIntervalMs: 300
    expirationDate: 30
  maxAttempts: 3
  gpkg:
    intermediatePath: "/intermediateStorage"
    finalPath: "/gpksStorage"
    resampling: "average"
    tilingScheme: "InspireCRS84Quad"
  batchSize: 15
  httpRetry: 
    attempts: 5
    delay: "exponential"
    shouldResetTimeout: true
  
resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: false
  path: /

ingress:
  enabled: false
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'
